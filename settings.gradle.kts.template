/*
* Copyright 2023, TeamDev. All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Redistribution and use in source and/or binary forms, with or without
* modification, must retain the above copyright notice and the following
* disclaimer.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

@file:Suppress("UnstableApiUsage")

/**
 * This version of `settings.gradle.kts` is used when `BuildSpeed` is build in a CI job.
 *
 * The version of Spine dependencies must be supplied as environment variables:
 *  - `COMPILER_VERSION` - the version of the Spine Compiler;
 *  - `VALIDATION_VERSION` - the version of the Validation plugin to the Spine Compiler;
 *  - `CORE_JVM_VERSION` â€” the version of the CoreJvm library;
 *  - `CORE_JVM_COMPILER_VERSION` - the version of the CoreJvm Compiler plugin.
 *
 * See `settings.gradle.kts` for the version of the file used for local builds.
 */

dependencyResolutionManagement {
    versionCatalogs {
        // String interpolation can break because of environment variable substitution.
        @Suppress("ConvertToStringTemplate")
        create("libs") {
            version("spineCompiler", "$COMPILER_VERSION")

            val coreJvm = version("coreJvm", "$CORE_JVM_VERSION")
            val coreJvmCompiler = version("coreJvmCompiler", "$CORE_JVM_COMPILER_VERSION")
            val validation = version("validation", "$VALIDATION_VERSION")

            val baseGroup = "io.spine"
            val toolsGroup = baseGroup + ".tools"
            val validationGroup = baseGroup + ".validation"

            library(
                "coreJvm",
                baseGroup, "spine-core"
            ).versionRef(coreJvm)

            library(
                "coreJvmCompiler",
                toolsGroup, "core-jvm-plugins"
            ).versionRef(coreJvmCompiler)

            library(
                "coreJvmServer",
                baseGroup, "spine-server"
            ).versionRef(coreJvm)

            library(
                "validation.runtimeJava",
                validationGroup, "spine-validation-java-runtime"
            ).versionRef(validation)
        }
    }
}
